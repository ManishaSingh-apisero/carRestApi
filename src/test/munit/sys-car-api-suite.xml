<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="sys-car-api-suite.xml" />
	<munit:test name="sys-car-api-main-test" doc:id="223edbde-e700-4074-97cb-2d526f5b97ec" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="3fcce206-a6e6-4864-b579-cfde0749f54d" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="97d3c241-2d3c-4887-9657-06a5927faf41" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://syscarapimaintest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://syscarapimaintest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://syscarapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="carName" value="#[output application/java --- readUrl('classpath://syscarapimaintest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="httpStatus" value="#[readUrl('classpath://syscarapimaintest\mock_variable_2.dwl')]" />
						<munit-tools:variable key="source" value="#[output application/java --- readUrl('classpath://syscarapimaintest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="destination" value="#[output application/java --- readUrl('classpath://syscarapimaintest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="7f2e0ccf-2df7-495e-941f-40f129e5b580" >
				<munit:payload value="#[readUrl('classpath://syscarapimaintest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://syscarapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sys-car-api-main" doc:id="376876a7-06f6-428a-a6f2-c098e2b170b0" name="sys-car-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="3b6e7756-d67f-44a8-9657-092030261223" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import syscarapimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="72318dfc-aa82-4a7a-b386-2514803fc5a8" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="98e0ae42-bd84-41b4-b58a-a439da4804cb" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\cars\(carName):sys-car-api-config-test" doc:id="e77d1706-d7f4-4190-84d9-005042323e6d" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="0c5fd4f9-ffa1-497e-ab40-b1a8e8c4d383" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9cfce1c5-16b3-4945-a26e-069d69d42fd1" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getcarscarNamesyscarapiconfigtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getcarscarNamesyscarapiconfigtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcarscarNamesyscarapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="carName" value="#[output application/java --- readUrl('classpath://getcarscarNamesyscarapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="source" value="#[output application/java --- readUrl('classpath://getcarscarNamesyscarapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="destination" value="#[output application/java --- readUrl('classpath://getcarscarNamesyscarapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="2df2824a-ba22-4945-b3c4-b8f32bc38926" >
				<munit:payload value="#[readUrl('classpath://getcarscarNamesyscarapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcarscarNamesyscarapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcarscarNamesyscarapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\cars\(carName):sys-car-api-config" doc:id="d818fd93-4d09-49fa-917e-23b1da737b94" name="get:\cars\(carName):sys-car-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5b52076f-4d00-42c2-8254-9417e882beaa" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcarscarNamesyscarapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\cars:application\json:sys-car-api-config-test" doc:id="8aadb13b-58e6-48b0-9b1d-fd243ff87811" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="9ad66463-6165-4043-9008-5edad1fc3322" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1a09ce95-789d-48de-9906-a59e8b824f25" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://postcarsapplicationjsonsyscarapiconfigtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://postcarsapplicationjsonsyscarapiconfigtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcarsapplicationjsonsyscarapiconfigtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1fe99971-72e0-4cd8-b5df-dcd74f500b5f" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcarsapplicationjsonsyscarapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcarsapplicationjsonsyscarapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcarsapplicationjsonsyscarapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\cars:application\json:sys-car-api-config" doc:id="e40133aa-3c9f-4feb-bd68-3af648d306eb" name="post:\cars:application\json:sys-car-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e67df251-6d4c-4a01-a985-0ca66e38e291" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcarsapplicationjsonsyscarapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\cars:sys-car-api-config-test" doc:id="e3c3df53-edf0-4167-b47f-2c07a19cf56f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="800efdf3-2412-464d-8e17-261cef29fb75" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ea3e8fdf-1627-4d8b-a57a-f72086b6af4f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcarssyscarapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcarssyscarapiconfigtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="4184742a-b8ba-40ea-8dc1-215fc8300a62" >
				<munit:payload value="#[readUrl('classpath://getcarssyscarapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcarssyscarapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcarssyscarapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\cars:sys-car-api-config" doc:id="bf3f1088-63e6-4fd3-a183-ddf7ac1c78c0" name="get:\cars:sys-car-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5c3ed81a-fa86-467f-96a4-ae654476de9b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcarssyscarapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
